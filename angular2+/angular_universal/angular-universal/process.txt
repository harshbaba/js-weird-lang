1.Install these packages
Dont use this:
npm install --save @angular/platform-server @nguniversal/module-map-ngfactory-loader ts-loader @nguniversal/express-engine enhanced-resolve@3.3.0

Note:Use below for install
npm install webpack@3.3.0 --save-dev

====dependencies==========
"ts-loader": "^3.5.0",
"@angular/platform-server": "^5.2.4",
"@nguniversal/express-engine": "^5.0.0-beta.5",
"@nguniversal/module-map-ngfactory-loader": "^5.0.0-beta.5",

2.Revise AppModule
a.add imports

import { PLATFORM_ID, APP_ID, Inject } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';

b.revise import browserModule
BrowserModule.withServerTransition({ appId: 'angular-universal-seo' }),

c.add constructor
constructor(
    @Inject(PLATFORM_ID) private platformId: Object,
    @Inject(APP_ID) private appId: string) {
    const platform = isPlatformBrowser(platformId) ?
      'in the browser' : 'on the server';
    console.log('Running ${platform} with appId=${appId}');
  }
  
#for reference you can see "app.module.ts"

3. Add src/app/app.server.module.ts

4.Add server.ts in root directory

5.Revise src/tsconfig.app.json
add server.ts inside "exclude"

6.Add "src/tsconfig.server.json"

7.Revise "./tsconfig.json"
"angularCompilerOptions": {
    "entryModule": "app/app.server.module#AppServerModule"
  }
  
8.Revise ./angular-cli.json
a.Revise old "outDir" to dist/browser
b.add another entry inside apps array for server build

9.Revise package.json (add new scripts to run via npm)
"build:universal": "npm run build:client-and-server-bundles && npm run webpack:server",
"serve:universal": "node dist/server.js",
"build:client-and-server-bundles": "ng build --prod && ng build --prod --app 1 --output-hashing=false",
"webpack:server": "webpack --config webpack.server.config.js --progress --colors"

10.Add src/main.server.ts

11.Add webpack.server.config.js


====dump===
ng set --global warnings.versionMismatch=false



